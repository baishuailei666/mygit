<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.xlauncher.utils.eventlog.dao.AlertLogDao">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.entity.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->

    <resultMap id="alertLogResultMap" type="AlertEventLog.entity.AlertLog">
        <result column="priority" property="priority" />
        <result column="time" property="time" />
        <result column="timespan" property="timeSpan" />
        <result column="thread" property="thread" />
        <result column="linenumber" property="lineNumber" />
        <result column="filename" property="fileName" />
        <result column="classname" property="className" />
        <result column="methodname" property="methodName" />
        <result column="message" property="message" />
    </resultMap>

    <!-- 创建(Create) -->
    <insert id="addAlertLog" parameterType="AlertEventLog.entity.AlertLog">
        insert into alert_log
        (priority,time,timespan,thread,linenumber,filename,classname,methodname,message)
        values
        (#{priority},#{time},#{timeSpan},#{thread},#{lineNumber},#{fileName},#{className},#{methodName},#{message})
    </insert>


    <!-- 分页查询全部 -->
    <select id="getAlertLogByPage" parameterType="int" resultMap="alertLogResultMap">
        select * from alert_log limit #{startPos},10
    </select>

    <!-- 取得记录的总数 -->
    <select id="getAlertLogCount" resultType="int">
    SELECT count(*) FROM alert_log ;
    </select>
</mapper>